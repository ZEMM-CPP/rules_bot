const { SlashCommandBuilder, EmbedBuilder, ButtonBuilder, ButtonStyle, ActionRowBuilder, PermissionFlagsBits } = require('discord.js');
const config = require('../config.json');

module.exports = {
  data: new SlashCommandBuilder()
    .setName('reglement')
    .setDescription('Envoie le r√®glement du serveur avec un bouton pour accepter')
    .addChannelOption(option => 
      option.setName('channel')
        .setDescription('Le salon o√π envoyer le r√®glement')
        .setRequired(true))
    .setDefaultMemberPermissions(PermissionFlagsBits.Administrator), // Par d√©faut limit√© aux admins
  
  async execute(interaction) {
    // V√©rifier que l'utilisateur a le r√¥le autoris√©
    const hasPermission = interaction.member.roles.cache.has(config.authorizedRoleId);
    
    if (!hasPermission && !interaction.member.permissions.has(PermissionFlagsBits.Administrator)) {
      return interaction.reply({
        content: 'Vous n\'avez pas la permission d\'utiliser cette commande.',
        ephemeral: true
      });
    }
    
    const channel = interaction.options.getChannel('channel');
    
    // Cr√©er l'embed du r√®glement
    const rulesEmbed = new EmbedBuilder()
      .setColor('#0099ff')
      .setTitle('üìú R√®glement du serveur de support')
      .setDescription('Veuillez lire attentivement le r√®glement ci-dessous et cliquer sur le bouton pour obtenir acc√®s au serveur.')
      .addFields(
        { name: '1. Respect mutuel', value: 'Soyez respectueux envers tous les membres. Aucune forme de harc√®lement, de discrimination ou de comportement toxique ne sera tol√©r√©e.' },
        { name: '2. Contenu inappropri√©', value: 'Pas de contenu NSFW, violent, politique ou discriminatoire. Tout contenu inappropri√© sera supprim√© et les r√©cidivistes seront bannis.' },
        { name: '3. Spam et publicit√©', value: 'Le spam et la publicit√© non autoris√©e sont interdits. Demandez la permission √† un mod√©rateur avant de partager des liens.' },
        { name: '4. Canaux appropri√©s', value: 'Utilisez les canaux appropri√©s pour vos discussions. Respectez le sujet de chaque canal.' },
        { name: '5. Aide et Support', value: 'Soyez patients lorsque vous demandez de l\'aide. Fournissez suffisamment d\'informations pour permettre aux autres de vous aider efficacement.' },
        { name: '6. Commandes du bot', value: 'N\'abusez pas des commandes du bot. L\'utilisation excessive ou inappropri√©e peut entra√Æner une restriction d\'acc√®s.' },
        { name: '7. Signalement', value: 'Signalez tout comportement inappropri√© √† un mod√©rateur plut√¥t que de r√©pondre directement.' },
        { name: '8. Modifications du r√®glement', value: 'Ce r√®glement peut √™tre modifi√© √† tout moment. Il est de votre responsabilit√© de vous tenir inform√© des changements.' }
      )
      .setFooter({ text: 'En cliquant sur le bouton ci-dessous, vous acceptez de respecter ce r√®glement.' })
      .setTimestamp();
    
    // Cr√©er le bouton
    const acceptButton = new ButtonBuilder()
      .setCustomId('accept-rules')
      .setLabel('J\'accepte le r√®glement')
      .setStyle(ButtonStyle.Success)
      .setEmoji('‚úÖ');
    
    const row = new ActionRowBuilder().addComponents(acceptButton);
    
    // Envoyer l'embed avec le bouton
    await channel.send({
      embeds: [rulesEmbed],
      components: [row]
    });
    
    // R√©pondre √† l'interaction
    await interaction.reply({
      content: `Le r√®glement a √©t√© envoy√© avec succ√®s dans ${channel}!`,
      ephemeral: true
    });
  },
}; 